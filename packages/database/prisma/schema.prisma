generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int                         @id @default(autoincrement())
  externalId            String                      @unique
  email                 String                      @unique
  name                  String
  username              String                      @unique
  OnRampTransaction     OnRampTransaction[]
  BankAccount           BankAccount[]
  Balance               Balance?
  sentTransfers         Transfer[]                  @relation(name: "FromUserRelation")
  receivedTransfers     Transfer[]                  @relation(name: "ToUserRelation")
}

// User's Bank Account(s)
model BankAccount {
  id                    Int                         @id @default(autoincrement())
  bankName              String
  accountNumber         Int                         @unique
  userId                Int                         
  user                  User                        @relation(fields: [userId], references: [id])
}

model Merchant {
  id                    Int                          @id @default(autoincrement())
  email                 String                       @unique
  name                  String
}

// On Ramp Transactions / Wallet Additions
model OnRampTransaction {
  id                    Int                           @id @default(autoincrement())
  userId                Int
  status                OnRampStatus                  @default(Processing)
  token                 String                        @unique
  provider              String
  amount                Int
  startTime             DateTime
  user                  User                          @relation(fields: [userId], references: [id])
}

// Wallet Balance
model Balance {
  id                    Int                           @id @default(autoincrement())
  userId                Int                           @unique
  amount                Int
  locked                Int
  user                  User                          @relation(fields: [userId], references: [id])
}

// Transfers to others
model Transfer {
  id                    String                        @id @default(cuid())
  amount                Int
  timestamp             DateTime
  fromUserId            Int
  fromUser              User                          @relation(name: "FromUserRelation", fields: [fromUserId], references: [id])
  toUserId              Int
  toUser                User                          @relation(name: "ToUserRelation", fields: [toUserId], references: [id])
}

enum OnRampStatus {
  Success
  Failure
  Processing
}