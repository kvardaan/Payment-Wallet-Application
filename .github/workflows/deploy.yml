name: Continuous Deployment - Deploy on Push

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Images
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker-compose.yaml
          push: true
          tags: |
            vardaankhattar/user-app:latest
            vardaankhattar/merchant-app:latest
            vardaankhattar/bank_webhook:latest

      - name: Verify Pushed Images
        run: |
          docker pull vardaankhattar/user-app:latest
          docker pull vardaankhattar/merchant-app:latest
          docker pull vardaankhattar/bank_webhook:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Pull the latest images
            sudo docker-compose pull

            # Stop and remove existing containers
            sudo docker-compose down || true

            # Start the services
            sudo docker-compose up -d

            # Run database migrations if needed
            # Uncomment and customize the following if you have migrations to run
            # sudo docker run --rm \
            #   -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
            #   vardaankhattar/user-app:latest \
            #   npx prisma migrate deploy
